name: Build Sing-box
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"   
    
jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.go.outputs.version}}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep '"version"' | head -1 | awk -F'"' '{print $4}') >> $GITHUB_OUTPUT
  sing-box:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      version: ${{steps.sing-box.outputs.version}}
      tags: ${{steps.sing-box.outputs.tags}}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{needs.go.outputs.version}}

      - name: Get `sing-box` version
        id: sing-box
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          echo version=$version >> $GITHUB_OUTPUT
          echo tags=with_quic,with_dhcp,with_wireguard,with_ech,with_utls,with_reality_server,with_clash_api,with_gvisor >> $GITHUB_OUTPUT
  cross:
    strategy:
      matrix:
        include:
          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
          - name: linux-arm64
            goos: linux
            goarch: arm64
          # windows
          - name: windows-amd64
            goos: windows
            goarch: amd64
            goamd64: v1
      fail-fast: false
    runs-on: ubuntu-latest
    needs:
      - go
      - sing-box
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: ${{needs.sing-box.outputs.tags}}
      VERSION: ${{needs.sing-box.outputs.version}}
    steps:
      - name: Checkout sing-box
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 1

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Checkout sing repository
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing
          ref: fix-interface
          path: sing

      - name: replace sing
        run: sed -i 's/^\/\/replace github.com.*$/replace github.com\/sagernet\/sing => .\/sing/' go.mod

      - name: Build core
        id: build
        run: go build -v -trimpath -ldflags "-X 'github.com/sagernet/sing-box/constant.Version=${VERSION}' -s -w -buildid=" -tags "${TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            sing-box
            sing-box.exe
          compression-level: 9
